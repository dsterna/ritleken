{"version":3,"sources":["actions/index.js","config.js","assets/img/temp2.jpg","App.js","reducers/gameReducer.js","reducers/nameReducer.js","reducers/index.js","index.js"],"names":["isHost","bool","type","payload","changeGameCode","str","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","TempDraw","ref","useRef","ready","Container","maxWidth","className","CardContent","Typography","gutterBottom","variant","component","style","textAlign","CardActions","display","justifyContent","disabled","IconButton","aria-label","onClick","current","undo","color","FormControlLabel","control","Checkbox","checked","name","label","StartCard","props","useSelector","state","dispatch","useDispatch","CardMedia","alt","height","image","temp2","title","to","Button","size","code","LobbyCard","game","gameCode","useState","players","setPlayers","userName","customName","setCustomName","gameStarted","setGameStarted","history","useHistory","location","useLocation","playerObj","setPlayerObj","db","firestore","collection","doc","useEffect","set","update","push","unsubscribe","onSnapshot","snap","pathname","data","Object","keys","length","values","a","newName","fetchData","Card","padding","map","elem","TextField","value","id","onChange","e","target","len","playerObject","forEach","element","i","ary","reverse","ii","unshift","pop","order","round","rounds","setUpGameQueue","JoinCard","joinCode","setJoinCode","error","setError","onSubmit","preventDefault","get","then","exists","Snackbar","open","autoHideDuration","onClose","Alert","severity","WriteCard","nrOfPlayers","setNrOfPlayers","text","setText","setRound","nrOfReady","setNrOfReady","setReady","tempPlayers","tempRound","filter","handleDone","tempPlayer","p","marginBottom","autoComplete","DrawCard","word","setWord","resetRound","setResetRound","drawRound","setDrawRound","tempDrawRound","playerOfWord","clear","loadSaveData","getSaveData","DoneCard","currentName","setCurrentName","orders","setOrders","entries","key","val","indexOf","sort","b","marginTop","Tabs","newValue","indicatorColor","textColor","index","Tab","a11yProps","fontFamily","saveData","hideInterface","touchAction","delete","App","exact","path","gameReducer","action","rand","Math","floor","random","nameReducer","newRand","allReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1a6203f.chunk.js","sourcesContent":["export const increment = () => {\n    return {\n        type: 'INCREMENT'\n    }\n}\nexport const decrement = () => {\n    return {\n        type: 'DECREMENT'\n    }\n}\nexport const isHost = (bool) => {\n    return {\n        type: 'ISHOSTCHANGER',\n        payload: bool\n    }\n}\nexport const changeGameCode = (str) => {\n    return {\n        type: 'GAMECODECHANGER',\n        payload: str\n    }\n}\nexport const changeName = (str) => {\n    return {\n        type: 'NAMECHANGER',\n        payload: str\n    }\n}\nexport const changeCodeName = () => {\n    return {\n        type: 'NAMECODECHANGER'\n    }\n}\nexport const setNrOfPlayers = (int) => {\n    return {\n        type: 'SETNUMBEROFPLAYERS',\n        payload: int\n    }\n}","import 'firebase/firestore'\n\nimport firebase from 'firebase/app'\n\nlet firebaeConfig = {\n    apiKey: \"AIzaSyCam1vXotzoIfZT7DyTbF8XSnLe0he-Uto\",\n    authDomain: \"adealbreaker-c9190.firebaseapp.com\",\n    databaseURL: \"https://adealbreaker-c9190.firebaseio.com\",\n    projectId: \"adealbreaker-c9190\",\n    storageBucket: \"adealbreaker-c9190.appspot.com\",\n    messagingSenderId: \"621961109952\",\n    appId: \"1:621961109952:web:ae70fc224efd7b3cb8e825\"\n}\n\nfirebase.initializeApp(firebaeConfig)\nexport default firebase","export default __webpack_public_path__ + \"static/media/temp2.5070e5eb.jpg\";","import './App.scss'\n\nimport {\n  Link,\n  Route,\n  HashRouter as Router,\n  Switch,\n  useHistory,\n  useLocation,\n} from \"react-router-dom\";\nimport React, { useEffect, useRef, useState } from 'react'\nimport { changeCodeName, changeGameCode, changeName, isHost } from './actions'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport AlarmIcon from '@material-ui/icons/Alarm';\nimport Alert from '@material-ui/lab/Alert';\nimport Button from '@material-ui/core/Button';\nimport CanvasDraw from \"react-canvas-draw\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ColorLensOutlinedIcon from '@material-ui/icons/ColorLensOutlined';\nimport Container from '@material-ui/core/Container';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport HdrStrongOutlinedIcon from '@material-ui/icons/HdrStrongOutlined';\nimport IconButton from '@material-ui/core/IconButton';\nimport LineWeightOutlinedIcon from '@material-ui/icons/LineWeightOutlined';\nimport ReplayOutlined from '@material-ui/icons/ReplayOutlined';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport firebase from './config'\nimport temp2 from './assets/img/temp2.jpg'\n\nfunction App() {\n  return (\n    <div >\n      <Router>\n        <div className=\"wapper\">\n          <Switch>\n            <Route exact path=\"/lobby\">\n              <LobbyCard />\n            </Route>\n            <Route exact path=\"/join\">\n              <JoinCard />\n            </Route>\n            <Route exact path=\"/write\">\n              <WriteCard />\n            </Route>\n            <Route exact path=\"/draw\">\n              <DrawCard />\n            </Route>\n            <Route exact path=\"/done\">\n              <DoneCard />\n            </Route>\n            <Route exact path=\"/TempDraw\">\n              <TempDraw />\n            </Route>\n            <Route path=\"/\">\n              <StartCard />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\n\nconst TempDraw = () => {\n  const ref = useRef()\n  const word = \"blä\"\n  const ready = false\n  const drawRound = true\n  const text = \"\"\n  return (\n    <Container maxWidth=\"sm\" className=\"container\" >\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ textAlign: \"center\" }}>\n          {drawRound && `Rita ${word}`}\n        </Typography>\n      </CardContent>\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around', justifyContent: 'center' }}>\n        <CanvasDraw disabled={ready || !drawRound} ref={ref} />\n      </CardActions>\n      {!drawRound && <CardActions style={{ display: \"flex\", justifyContent: 'space-around', justifyContent: 'center' }}>\n        <form onSubmit={() => { }} autoComplete=\"off\"> <TextField disabled={ready} id=\"standard-basic\" label=\"\" value={text} /></form>\n      </CardActions>\n      }\n      <div style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <IconButton aria-label=\"delete\" onClick={() => ref.current.undo()}>\n          <ReplayOutlined />\n        </IconButton>\n        <IconButton aria-label=\"delete\" disabled color=\"primary\" >\n          <HdrStrongOutlinedIcon />\n        </IconButton>\n        <IconButton color=\"secondary\" aria-label=\"add an alarm\">\n          <LineWeightOutlinedIcon />\n        </IconButton>\n        <IconButton color=\"primary\" aria-label=\"add to shopping cart\">\n          <ColorLensOutlinedIcon />\n        </IconButton>\n      </div>\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={ready}\n\n              name=\"checkedB\"\n              color=\"primary\"\n              disabled={ready}\n            />\n          }\n          label={`Redo (${1})`}\n        />\n      </CardActions>\n    </Container>\n  )\n}\n\n\nconst StartCard = (props) => {\n  const name = useSelector(state => state.name)\n  const dispatch = useDispatch()\n\n  return (\n    <Container maxWidth=\"sm\" className=\"container\" >\n      <CardMedia\n        component=\"img\"\n        alt=\"Contemplative Reptile\"\n        height=\"300\"\n        image={temp2}\n        title=\"tmep\"\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          Ritleken\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Lorem, ipsum dolor sit amet consectetur adipisicing elit. Saepe non rem inventore repellendus est exercitationem nihil earum consequatur libero corrupti?\n        </Typography>\n      </CardContent>\n\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <Link to=\"/join\"><Button size=\"small\" color=\"primary\" onClick={() => {\n          dispatch(isHost(false))\n        }}>Joina spel  </Button></Link>\n        <Link to=\"/lobby\"> <Button size=\"small\" color=\"primary\" onClick={() => {\n          dispatch(isHost(true))\n          dispatch(changeGameCode(name.code))\n        }\n        }>Skapa rum</Button></Link>\n\n      </CardActions>\n    </Container>\n  )\n}\n\nconst LobbyCard = (props) => {\n  const name = useSelector(state => state.name)\n  const isHost = useSelector(state => state.game.isHost)\n  const gameCode = useSelector(state => state.game.gameCode)\n  const [players, setPlayers] = useState([])\n  const [customName, setCustomName] = useState(name.userName)\n  const [gameStarted, setGameStarted] = useState(false)\n  const history = useHistory();\n  const dispatch = useDispatch()\n  const location = useLocation()\n  const [playerObj, setPlayerObj] = useState({})\n\n\n  const db = gameCode && firebase.firestore().collection('rooms').doc(`${gameCode}`)\n  useEffect(() => {\n\n    if (db) {\n      if (isHost) {\n        db.set({})\n      }\n      db.update({\n        [`players.${name.code}`]: { ...name, isHost: isHost },\n        gameStarted: false\n      })\n    }\n    else {\n      history.push('/')\n    }\n\n\n  }, [])\n\n\n  useEffect(() => {\n    if (db) {\n\n      const unsubscribe = firebase\n        .firestore()\n        .collection('rooms')\n        .doc(`${gameCode}`)\n        .onSnapshot((snap) => {\n          if (location.pathname === \"/lobby\") {\n            if (snap?.data()) {\n              if (Object.keys(snap.data()).length) {\n\n\n                setPlayers(Object.values(snap.data().players))\n                setPlayerObj(snap.data().players)\n                setGameStarted(snap.data().gameStarted)\n              }\n            }\n          }\n        })\n      return () => unsubscribe()\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let newName = customName !== \"\" ? customName : `player-${name.code}`\n      dispatch(changeName(newName))\n      try {\n        db.update({\n          [`players.${name.code}`]: { ...name, userName: newName, isHost: isHost },\n          gameStarted: false\n        })\n      } catch {\n      }\n    };\n    fetchData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [customName]);\n\n  const setUpGameQueue = () => {\n    let len = players.length - 1\n    let playerObject = playerObj\n    players.forEach((element, i) => {\n      let ary = [...players].reverse()\n      for (let ii = 0; ii < i + 1; ii++) {\n        ary.unshift(ary.pop());\n      }\n      playerObject[element.code].order = ary.map(elem => elem.code)\n      playerObject[element.code].ready = false\n\n    });\n    db.update({ round: 0, rounds: len + 1, players: playerObject })\n  }\n\n\n  useEffect(() => {\n    if (gameStarted) {\n      history.push(\"/write\")\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [gameStarted])\n\n  return (\n    <Card className=\"card-class\" style={{ padding: \"1rem\" }}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          Lobby {gameCode}\n        </Typography>\n        <ul>\n          {players.map((elem) => <li key={elem.code}>{elem.userName}</li>)}\n        </ul>\n      </CardContent>\n      <CardActions >\n      </CardActions>\n      <TextField value={customName} id=\"outlined-basic\" label=\"Namn\" variant=\"outlined\" onChange={(e) => {\n        setCustomName(e.target.value)\n      }} />\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <Link to=\"/\">   <Button size=\"small\" color=\"primary\" onClick={() => {\n        }}>Avbryt </Button></Link>\n        {isHost && <Button size=\"small\" color=\"primary\" onClick={() => {\n          setUpGameQueue()\n          db.update({ gameStarted: true })\n        }}> Starta  </Button>\n        }\n      </CardActions>\n    </Card>\n  )\n}\n\n\nconst JoinCard = (props) => {\n  const [joinCode, setJoinCode] = useState('')\n  const db = firebase.firestore().collection('rooms')\n  const dispatch = useDispatch()\n  const history = useHistory();\n  const [error, setError] = useState(false)\n  const joinGame = (params) => {\n    if (joinCode === \"\")\n      return\n\n    db.doc(joinCode).get().then(\n      doc => {\n        if (doc.exists) {\n          dispatch(changeGameCode(joinCode))\n          history.push(\"/lobby\")\n        }\n        else {\n          setError(true)\n        }\n      }\n    )\n  }\n\n  return (\n    <Card className=\"card-class\" style={{ padding: \"1rem\" }}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          Joina spel\n        </Typography>\n      </CardContent>\n      <form onSubmit={e => {\n        e.preventDefault();\n        joinGame()\n      }}>\n        <CardActions >\n          <TextField value={joinCode} id=\"outlined-basic\" label=\"Anslutningskod\" variant=\"outlined\" onChange={(e) => setJoinCode(e.target.value)} />\n        </CardActions>\n        <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n          <Link to=\"/\"><Button size=\"small\" color=\"primary\" onClick={() => {\n          }}>Avbryt </Button></Link>\n          <Button size=\"small\" color=\"primary\" type=\"submit\" >\n            Hitta spel </Button>\n          <Snackbar open={error} autoHideDuration={6000} onClose={() => { setError(false) }}>\n            <Alert severity=\"error\">Hittade ingets spel</Alert>\n          </Snackbar>\n        </CardActions>\n      </form>\n    </Card >\n  )\n}\n\n\nconst WriteCard = (props) => {\n  // skulle kunna sätta statet i local storage och ha som backup om man råkar uppdatera sidan\n  const name = useSelector(state => state.name.code)\n  // const nrOfPlayers = useSelector(state => state.game.nrOfPlayers)\n  const gameCode = useSelector(state => state.game.gameCode)\n\n  const db = gameCode && firebase.firestore().collection('rooms').doc(`${gameCode}`)\n  const [nrOfPlayers, setNrOfPlayers] = useState(99)\n  const [players, setPlayers] = useState([])\n  const [text, setText] = useState(\"\")\n  const [round, setRound] = useState(0)\n  const [nrOfReady, setNrOfReady] = useState(0)\n  const [ready, setReady] = useState(false)\n  const history = useHistory();\n  const location = useLocation()\n\n\n  useEffect(() => {\n\n    const unsubscribe = db.onSnapshot((snap) => {\n      if (location.pathname === \"/write\") {\n        if (snap.data()) {\n          const tempPlayers = snap.data().players\n          const tempRound = snap.data().round\n          setPlayers(tempPlayers)\n          setRound(tempRound)\n          setNrOfReady(Object.values(tempPlayers).filter(elem => elem.ready).length)\n          setNrOfPlayers(Object.values(tempPlayers).length)\n        }\n      }\n    })\n    return () => unsubscribe()\n  }, [])\n\n  const handleDone = (e) => {\n    e.preventDefault()\n    if (text === \"\") {\n      return\n    }\n    setReady(true)\n    const tempPlayer = players[name]\n    tempPlayer.ready = true\n    tempPlayer[round] = text\n    var p = \"players\";\n    var update = {};\n    update[p + '.' + name] = tempPlayer;\n    db.update(update)\n  }\n\n  useEffect(() => {\n    if (nrOfReady === nrOfPlayers) {\n      if (isHost) {\n        const tempPlayers = players\n        Object.keys(players).forEach((elem) => tempPlayers[elem].ready = false)\n        db.update({ round: round + 1, players: tempPlayers })\n      }\n      history.push(\"/draw\")\n    }\n  }, [nrOfReady])\n\n  return (\n    <Container maxWidth=\"sm\" className=\"container\" >\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h3\" style={{ marginBottom: 0, textAlign: \"center\" }}>\n          Skriv ditt ord:\n        </Typography>\n      </CardContent>\n      <CardActions style={{ display: \"flex\", justifyContent: 'center' }}>\n        <form onSubmit={(e) => handleDone(e)} autoComplete=\"off\"> <TextField disabled={ready} id=\"standard-basic\" label=\"\" value={text} onChange={(e) => { setText(e.target.value) }} /></form>\n        <br />\n      </CardActions>\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={ready}\n              onChange={(e) => handleDone(e)}\n              name=\"checkedB\"\n              color=\"primary\"\n              disabled={ready}\n            />\n          }\n          label={`Redo (${nrOfReady})`}\n        />\n      </CardActions>\n    </Container>\n  )\n}\n\nconst DrawCard = () => {\n  // skulle kunna sätta statet i local storage och ha som backup om man råkar uppdatera sidan\n  const name = useSelector(state => state.name.code)\n  const gameCode = useSelector(state => state.game.gameCode)\n  const ref = useRef(\"\")\n  const db = gameCode && firebase.firestore().collection('rooms').doc(`${gameCode}`)\n  const [players, setPlayers] = useState([])\n  const [word, setWord] = useState(\"\")\n  const [text, setText] = useState(\"\")\n  const [round, setRound] = useState(0)\n  const [nrOfReady, setNrOfReady] = useState(0)\n  const [nrOfPlayers, setNrOfPlayers] = useState(99)\n  const [ready, setReady] = useState(false)\n  const [resetRound, setResetRound] = useState(false)\n  const [drawRound, setDrawRound] = useState()\n  const history = useHistory();\n  const location = useLocation()\n\n  useEffect(() => {\n    if (resetRound === true) {\n      setReady(false)\n      setNrOfReady(0)\n      setText(\"\")\n\n\n    }\n    const unsubscribe = db.onSnapshot((snap) => {\n      if (location.pathname === \"/draw\") {\n        if (snap.data()) {\n          const tempPlayers = snap.data().players\n          const tempRound = snap.data().round\n          const tempNrOfPlayers = Object.values(tempPlayers).length\n          if (tempRound === tempNrOfPlayers) {\n            history.push('/done')\n          }\n          else {\n            setPlayers(tempPlayers)\n            setRound(tempRound)\n            const tempDrawRound = !!(round % 2 === 0)\n            setNrOfReady(Object.values(tempPlayers).filter(elem => elem.ready).length)\n            setNrOfPlayers(Object.values(tempPlayers).length)\n            const playerOfWord = tempPlayers[name].order[1]\n            setDrawRound(tempDrawRound)\n            setWord(tempPlayers[playerOfWord][tempRound - 1])\n          }\n        }\n      }\n    })\n    setResetRound(false)\n    return () => unsubscribe()\n  }, [resetRound])\n\n  useEffect(() => {\n    if (word) {\n      if (drawRound) {\n        ref.current.clear()\n      }\n      else {\n        const playerOfWord = players[name].order[1]\n        ref.current.loadSaveData(players[playerOfWord][round - 1], true)\n      }\n    }\n  }, [drawRound])\n\n  const handleDone = (e) => {\n    e.preventDefault()\n\n    if (text === \"\" && !drawRound) {\n      return\n    }\n    setReady(true)\n    const tempPlayer = players[name]\n    tempPlayer.ready = true\n    tempPlayer[round] = drawRound ? ref.current.getSaveData() : text\n    var p = \"players\";\n    var update = {};\n    update[p + '.' + name] = tempPlayer;\n    db.update(update)\n  }\n\n  useEffect(() => {\n    if (nrOfReady === nrOfPlayers) {\n      if (isHost) {\n        db.update({ round: round + 1 })\n        const tempPlayers = players\n        Object.keys(players).forEach((elem) => tempPlayers[elem].ready = false)\n        db.update({ round: round + 1, players: tempPlayers })\n      }\n      setResetRound(true)\n    }\n  }, [nrOfReady])\n  return (\n    <Container maxWidth=\"sm\" className=\"container\" >\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ textAlign: \"center\" }}>\n          {drawRound && `Rita ${word}`}\n        </Typography>\n\n      </CardContent>\n      <CardActions style={{ display: \"flex\", justifyContent: 'center' }}>\n        <CanvasDraw disabled={ready || !drawRound} ref={ref} />\n      </CardActions>\n      {!drawRound && <CardActions style={{ display: \"flex\", justifyContent: 'center' }}>\n        <form onSubmit={(e) => handleDone(e)} autoComplete=\"off\"> <TextField disabled={ready} id=\"standard-basic\" label=\"\" value={text} onChange={(e) => { setText(e.target.value) }} /></form>\n      </CardActions>\n      }\n      <div style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <IconButton aria-label=\"delete\" onClick={() => ref.current.undo()}>\n          <ReplayOutlined />\n        </IconButton>\n        <IconButton aria-label=\"delete\" disabled color=\"primary\" >\n          <HdrStrongOutlinedIcon />\n        </IconButton>\n        <IconButton color=\"secondary\" aria-label=\"add an alarm\">\n          <LineWeightOutlinedIcon />\n        </IconButton>\n        <IconButton color=\"primary\" aria-label=\"add to shopping cart\">\n          <ColorLensOutlinedIcon />\n        </IconButton>\n      </div>\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={ready}\n              onClick={(e) => handleDone(e)}\n              name=\"checkedB\"\n              color=\"primary\"\n              disabled={ready}\n            />\n          }\n          label={`Redo (${nrOfReady})`}\n        />\n      </CardActions>\n    </Container>\n  )\n}\n\nconst DoneCard = (props) => {\n  // const gameCode = 3451\n  // const name = 3451\n  const gameCode = useSelector(state => state.game.gameCode)\n  const name = useSelector(state => state.name.code)\n\n  const [currentName, setCurrentName] = useState(name)\n  const db = firebase.firestore().collection('rooms').doc(`${gameCode}`)\n  const [players, setPlayers] = useState()\n  const [orders, setOrders] = useState()\n  const dispatch = useDispatch()\n  const history = useHistory()\n  useEffect(() => {\n    if (!db) {\n      history.push('/')\n    }\n    db.get().then(\n      doc => {\n        if (doc.exists) {\n          setPlayers(doc.data().players);\n        }\n      }\n    )\n  }, [])\n\n  useEffect(() => {\n    if (players) {\n      const tempPlayers = players\n      const ary = Object.entries(tempPlayers).map(([key, val]) => { return { key: key, val: val.order.indexOf(currentName) } }).sort((a, b) => a.val > b.val ? 1 : ((b.val > a.val) ? -1 : 0))\n      setOrders(ary)\n    }\n  }, [players, currentName])\n\n  const handleChange = (e, newValue) => {\n    setCurrentName(newValue)\n  }\n  function a11yProps(index) {\n    return {\n      id: `scrollable-auto-tab-${index}`,\n      'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n  }\n\n  return (\n    <Container maxWidth=\"sm\" className=\"container\" style={{ marginTop: \"3rem\", marginBottom: \"3rem\", }}>\n      <CardContent>\n        {players && <div style={{ display: \"flex\", justifyContent: 'center' }} >\n          <Tabs\n            onChange={handleChange}\n            value={currentName}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n\n          >\n            {Object.keys(players).map((elem, index) => <Tab key={index} label={players[elem].userName} value={players[elem].code} {...a11yProps(index)} />)}\n          </Tabs>\n        </div>}\n      </CardContent>\n      {\n        orders && orders.map((elem, index) =>\n          <div key={index}>{index % 2 === 0\n            ?\n            // change to typography\n            <h2 style={{ textAlign: \"center\", fontFamily: 'Roboto' }}>{players[elem.key][index]}</h2>\n            :\n            <div style={{ display: \"flex\", justifyContent: 'center' }}>\n              <CanvasDraw disabled={true} saveData={players[elem.key][index]} hideInterface={true} style={{ touchAction: \"pan-y\" }} />\n\n            </div>}\n          </div>)\n      }\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <Link to=\"/\"> <Button size=\"small\" color=\"primary\" onClick={() => {\n          if (db) {\n            db.delete();\n            dispatch(changeCodeName())\n          }\n        }\n        }>Tillbaka</Button></Link>\n      </CardActions>\n    </Container >\n  )\n}\n\n\nexport default App;","const gameReducer = (state = { gameCode: '', isHost: true, nrOfPlayers: 2 }, action) => {\n\n    switch (action.type) {\n        case 'GAMECODECHANGER':\n            return { ...state, gameCode: action.payload }\n        case 'ISHOSTCHANGER':\n            return { ...state, isHost: action.payload }\n        case 'SETNUMBEROFPLAYERS':\n            return { ...state, nrOfPlayers: action.payload }\n        default:\n            return state\n    }\n}\n\nexport default gameReducer","\nconst rand = Math.floor(1000 + Math.random() * 9000)\nconst nameReducer = (state = { code: rand, userName: `spelare-${rand}` }, action) => {\n    switch (action.type) {\n        case 'NAMECHANGER':\n            return { ...state, userName: action.payload }\n        case 'NAMECODECHANGER':\n            let newRand = Math.floor(1000 + Math.random() * 9000)\n            return { ...state, code: newRand }\n        default:\n            return state\n    }\n}\n\nexport default nameReducer","import { combineReducers } from 'redux'\nimport gameReducer from './gameReducer'\nimport nameReducer from './nameReducer'\n\nexport const allReducers = combineReducers({ name: nameReducer , game: gameReducer})","import './index.css';\nimport '@fontsource/roboto';\n\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { allReducers } from './reducers'\nimport { createStore } from 'redux'\n\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}