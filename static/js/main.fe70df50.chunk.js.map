{"version":3,"sources":["actions/index.js","config.js","assets/img/temp.jpg","App.js","reducers/gameReducer.js","reducers/nameReducer.js","reducers/index.js","index.js"],"names":["isHost","bool","type","payload","changeGameCode","str","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","StartCard","props","name","useSelector","state","dispatch","useDispatch","Container","maxWidth","className","CardMedia","component","alt","height","image","temp","title","CardContent","Typography","gutterBottom","variant","color","CardActions","style","display","justifyContent","to","Button","size","onClick","code","LobbyCard","game","gameCode","useState","players","setPlayers","userName","customName","setCustomName","gameStarted","setGameStarted","history","useHistory","playerObj","setPlayerObj","db","firestore","collection","doc","useEffect","a","unsubscribe","onSnapshot","snap","data","Object","values","push","set","update","then","getPlayers","newName","fetchData","Card","padding","map","elem","TextField","value","id","label","onChange","e","target","len","length","playerObject","forEach","i","order","_","ii","ready","round","rounds","setUpGameQueue","JoinCard","joinCode","setJoinCode","WriteCard","nrOfPlayers","text","setText","setRound","nrOfReady","setNrOfReady","setReady","filter","handleDone","preventDefault","tempPlayer","p","console","log","marginBottom","onSubmit","disabled","FormControlLabel","control","Checkbox","checked","DrawCard","App","exact","path","gameReducer","action","rand","Math","floor","random","nameReducer","allReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe70df50.chunk.js","sourcesContent":["export const increment = () => {\n    return {\n        type: 'INCREMENT'\n    }\n}\nexport const decrement = () => {\n    return {\n        type: 'DECREMENT'\n    }\n}\nexport const isHost = (bool) => {\n    return {\n        type: 'ISHOSTCHANGER',\n        payload: bool\n    }\n}\nexport const changeGameCode = (str) => {\n    return {\n        type: 'GAMECODECHANGER',\n        payload: str\n    }\n}\nexport const changeName = (str) => {\n    return {\n        type: 'NAMECHANGER',\n        payload: str\n    }\n}\nexport const setNrOfPlayers = (int) => {\n    return {\n        type: 'SETNUMBEROFPLAYERS',\n        payload: int\n    }\n}","import 'firebase/firestore'\n\nimport firebase from 'firebase/app'\n\nlet firebaeConfig = {\n    apiKey: \"AIzaSyCam1vXotzoIfZT7DyTbF8XSnLe0he-Uto\",\n    authDomain: \"adealbreaker-c9190.firebaseapp.com\",\n    databaseURL: \"https://adealbreaker-c9190.firebaseio.com\",\n    projectId: \"adealbreaker-c9190\",\n    storageBucket: \"adealbreaker-c9190.appspot.com\",\n    messagingSenderId: \"621961109952\",\n    appId: \"1:621961109952:web:ae70fc224efd7b3cb8e825\"\n}\n\nfirebase.initializeApp(firebaeConfig)\nexport default firebase","export default __webpack_public_path__ + \"static/media/temp.1f0dee70.jpg\";","import './App.scss'\n\nimport {\n  Link,\n  Route,\n  HashRouter as Router,\n  Switch,\n  useHistory\n} from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react'\nimport { changeGameCode, changeName, isHost, setNrOfPlayers } from './actions'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Button from '@material-ui/core/Button';\nimport CanvasDraw from \"react-canvas-draw\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Container from '@material-ui/core/Container';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport firebase from './config'\nimport temp from './assets/img/temp.jpg'\n\nfunction App() {\n\n\n  return (\n    <div >\n      <Router>\n        <div className=\"wapper\">\n          <Switch>\n            <Route exact path=\"/lobby\">\n              <LobbyCard />\n            </Route>\n            <Route exact path=\"/join\">\n              <JoinCard />\n            </Route>\n            <Route exact path=\"/draw\">\n              <DrawCard />\n            </Route>\n            <Route exact path=\"/write\">\n              <WriteCard />\n            </Route>\n            <Route path=\"/\">\n              <StartCard />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n\n\n}\n\n\nconst StartCard = (props) => {\n  const name = useSelector(state => state.name)\n  const dispatch = useDispatch()\n\n  return (\n    <Container maxWidth=\"sm\" className=\"container\" >\n      <CardMedia\n        component=\"img\"\n        alt=\"Contemplative Reptile\"\n        height=\"140\"\n        image={temp}\n        title=\"tmep\"\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          Ritleken\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Lorem, ipsum dolor sit amet consectetur adipisicing elit. Saepe non rem inventore repellendus est exercitationem nihil earum consequatur libero corrupti?\n        </Typography>\n      </CardContent>\n\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n\n        <Link to=\"/join\"><Button size=\"small\" color=\"primary\" onClick={() => {\n          dispatch(isHost(false))\n\n        }}>Joina spel  </Button></Link>\n        <Link to=\"/lobby\"> <Button size=\"small\" color=\"primary\" onClick={() => {\n          dispatch(isHost(true))\n          dispatch(changeGameCode(name.code))\n        }\n        }>Skapa rum</Button></Link>\n\n      </CardActions>\n    </Container>\n  )\n}\n\nconst LobbyCard = (props) => {\n  const name = useSelector(state => state.name)\n  const isHost = useSelector(state => state.game.isHost)\n  const gameCode = useSelector(state => state.game.gameCode)\n  const [players, setPlayers] = useState([])\n  const [customName, setCustomName] = useState(name.userName)\n  const [gameStarted, setGameStarted] = useState(false)\n  const history = useHistory();\n  const dispatch = useDispatch()\n  const [playerObj, setPlayerObj] = useState({})\n\n\n  const db = gameCode && firebase.firestore().collection('rooms').doc(`${gameCode}`)\n\n\n\n\n\n\n  useEffect(() => {\n    async function getPlayers() {\n      const unsubscribe = firebase\n        .firestore()\n        .collection('rooms')\n        .doc(`${gameCode}`)\n        .onSnapshot((snap) => {\n          if (snap.data()) {\n            setPlayers(Object.values(snap.data().players))\n            setPlayerObj(snap.data().players)\n          }\n          setGameStarted(snap.data().gameStarted)\n        })\n      return () => unsubscribe()\n    }\n\n    if (gameCode === \"\") {\n      history.push(\"/\");\n    }\n    else {\n      if (isHost) {\n        db.set({})\n      }\n      db.update({\n        [`players.${name.code}`]: { ...name, isHost: isHost },\n        gameStarted: false\n      }).then(() => getPlayers());\n      ;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let newName = customName !== \"\" ? customName : `player-${name.code}`\n      dispatch(changeName(newName))\n      try {\n        db.update({\n          [`players.${name.code}`]: { ...name, userName: newName, isHost: isHost },\n          gameStarted: false\n        })\n      } catch {\n      }\n    };\n    fetchData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [customName]);\n\n  const setUpGameQueue = () => {\n\n    let len = players.length - 1\n    let playerObject = playerObj\n\n    players.forEach((elem, i) => {\n      playerObject[elem.code].order = players.map((_, ii) => players[(i + ii > len ? ii + i - len - 1 : i + ii)].code)\n      playerObject[elem.code].ready = false\n\n    })\n\n    dispatch(setNrOfPlayers(len + 1))\n\n    db.update({ round: 0, rounds: len + 1, players: playerObject })\n\n\n    /**\n     * \n     * [ 1 , 2, 3, 4 ]\n     * \n     * 1->2->3->4\n     * 2->-3-4->1\n     * 3->4->1->2\n     * 4->1->2->3\n     */\n  }\n\n\n  useEffect(() => {\n    if (gameStarted) {\n      history.push(\"/write\")\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [gameStarted])\n\n  return (\n    <Card className=\"card-class\" style={{ padding: \"1rem\" }}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          Lobby {gameCode}\n        </Typography>\n        <h3>{!gameStarted ? \"Väntar\" : \"Startad\"}</h3>\n        <ul>\n          {players.map((elem) => <li key={elem.code}>{elem.userName}</li>)}\n        </ul>\n      </CardContent>\n      <CardActions >\n      </CardActions>\n\n      <TextField value={customName} id=\"outlined-basic\" label=\"Namn\" variant=\"outlined\" onChange={(e) => {\n        setCustomName(e.target.value)\n      }} />\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <Link to=\"/\">   <Button size=\"small\" color=\"primary\" onClick={() => {\n        }}>Avbryt </Button></Link>\n        {isHost && <Button size=\"small\" color=\"primary\" onClick={() => {\n          setUpGameQueue()\n          db.update({ gameStarted: true })\n        }}> Starta  </Button>\n        }\n      </CardActions>\n    </Card>\n  )\n}\nconst JoinCard = (props) => {\n  const [joinCode, setJoinCode] = useState('')\n  const dispatch = useDispatch()\n  return (\n    <Card className=\"card-class\" style={{ padding: \"1rem\" }}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          Joina spel\n        </Typography>\n\n      </CardContent>\n      <CardActions >\n        <TextField value={joinCode} id=\"outlined-basic\" label=\"Anslutningskod\" variant=\"outlined\" onChange={(e) => setJoinCode(e.target.value)} />\n      </CardActions>\n\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <Link to=\"/\"><Button size=\"small\" color=\"primary\" onClick={() => {\n        }}>Avbryt </Button></Link>\n        <Link to=\"/lobby\"><Button size=\"small\" color=\"primary\" onClick={() => {\n          // todo: kör en find och kolla om spelet finns, om nej, redirecta inte \n          dispatch(changeGameCode(joinCode))\n        }\n        }>Hitta spel </Button></Link>\n\n      </CardActions>\n    </Card>\n  )\n}\n\n\nconst WriteCard = (props) => {\n  // skulle kunna sätta statet i local storage och ha som backup om man råkar uppdatera sidan\n  const name = useSelector(state => state.name.code)\n  const nrOfPlayers = useSelector(state => state.game.nrOfPlayers)\n  const gameCode = useSelector(state => state.game.gameCode)\n\n  const db = gameCode && firebase.firestore().collection('rooms').doc(`${gameCode}`)\n  const [players, setPlayers] = useState([])\n  const [text, setText] = useState(\"\")\n  const [round, setRound] = useState(0)\n  const [nrOfReady, setNrOfReady] = useState(0)\n  const [ready, setReady] = useState(false)\n  useEffect(() => {\n    const unsubscribe = db.onSnapshot((snap) => {\n      if (snap.data()) {\n        setPlayers(snap.data().players)\n        setRound(snap.data().round)\n        setNrOfReady(Object.values(snap.data().players).filter(elem => elem.ready).length)\n      }\n    })\n    return () => unsubscribe()\n  }, [])\n\n  const handleDone = (e) => {\n    e.preventDefault()\n    if (text === \"\") {\n      return\n    }\n    setReady(true)\n    const tempPlayer = players[name]\n    tempPlayer.ready = true\n    tempPlayer[round] = text\n    var p = \"players\";\n    var update = {};\n    update[p + '.' + name] = tempPlayer;\n    db.update(update)\n  }\n\n  useEffect(() => {\n    if (nrOfReady === nrOfPlayers) {\n      console.log(\"vi ska vidare\")\n      console.log()\n    }\n  }, [nrOfReady])\n\n  return (\n    <Container maxWidth=\"sm\" className=\"container\" >\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h3\" style={{ marginBottom: 0 }}>\n          Skriv ditt ord:\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <form onSubmit={(e) => handleDone(e)}> <TextField disabled={ready} id=\"standard-basic\" label=\"\" value={text} onChange={(e) => { setText(e.target.value) }} /></form>\n        <br />\n      </CardActions>\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={ready}\n              onChange={(e) => handleDone(e)}\n              name=\"checkedB\"\n              color=\"primary\"\n              disabled={ready}\n            />\n          }\n          label={`Redo (${nrOfReady})`}\n        />\n      </CardActions>\n    </Container>\n  )\n}\n\nconst DrawCard = (props) => {\n  const name = useSelector(state => state.name)\n  const dispatch = useDispatch()\n\n  return (\n    <Container maxWidth=\"sm\" className=\"container\" >\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {`Rita en ${''}`}\n        </Typography>\n\n      </CardContent>\n      <CardActions > <CanvasDraw /></CardActions>\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <Link to=\"/write\"><Button size=\"small\" color=\"primary\" onClick={() => {\n          dispatch(isHost(false))\n        }}>Redo  </Button></Link>\n      </CardActions>\n    </Container>\n  )\n}\n\nexport default App;","const gameReducer = (state = { gameCode: '', isHost: true, nrOfPlayers: 2 }, action) => {\n\n    switch (action.type) {\n        case 'GAMECODECHANGER':\n            return { ...state, gameCode: action.payload }\n        case 'ISHOSTCHANGER':\n            return { ...state, isHost: action.payload }\n        case 'SETNUMBEROFPLAYERS':\n            return { ...state, nrOfPlayers: action.payload }\n        default:\n            return state\n    }\n}\n\nexport default gameReducer","\nconst rand = Math.floor(1000 + Math.random() * 9000)\nconst nameReducer = (state = { code: rand, userName: `spelare-${rand}` }, action) => {\n    switch (action.type) {\n        case 'NAMECHANGER':\n            return { ...state, userName: action.payload }\n        default:\n            return state\n    }\n}\n\nexport default nameReducer","import { combineReducers } from 'redux'\nimport gameReducer from './gameReducer'\nimport nameReducer from './nameReducer'\n\nexport const allReducers = combineReducers({ name: nameReducer , game: gameReducer})","import './index.css';\nimport 'fontsource-roboto';\n\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { allReducers } from './reducers'\nimport { createStore } from 'redux'\n\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}