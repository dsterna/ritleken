{"version":3,"sources":["config.js","assets/img/temp.jpg","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","LobbyCard","props","joinCode","hosting","setGameJoined","setJoining","setHosting","hostCode","useState","state","setState","useEffect","firestore","collection","doc","set","players","name","merge","unsubscribe","onSnapshot","snap","docs","length","temp","map","id","data","Card","className","style","padding","CardContent","Typography","variant","component","elem","CardActions","display","justifyContent","Button","size","color","onClick","disabled","JoinCard","setJoinCode","TextField","value","label","onChange","e","target","StartCard","CardMedia","alt","height","image","title","gutterBottom","App","joining","gameJoined","Math","floor","random","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dc49878.chunk.js","sourcesContent":["import 'firebase/firestore'\n\nimport firebase from 'firebase/app'\n\nlet firebaeConfig = {\n    apiKey: \"AIzaSyCam1vXotzoIfZT7DyTbF8XSnLe0he-Uto\",\n    authDomain: \"adealbreaker-c9190.firebaseapp.com\",\n    databaseURL: \"https://adealbreaker-c9190.firebaseio.com\",\n    projectId: \"adealbreaker-c9190\",\n    storageBucket: \"adealbreaker-c9190.appspot.com\",\n    messagingSenderId: \"621961109952\",\n    appId: \"1:621961109952:web:ae70fc224efd7b3cb8e825\"\n}\n\nfirebase.initializeApp(firebaeConfig)\nexport default firebase","export default __webpack_public_path__ + \"static/media/temp.1f0dee70.jpg\";","import './App.scss'\n\nimport React, { useEffect, useState } from 'react'\n\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport firebase from './config'\nimport temp from './assets/img/temp.jpg'\n\n// After\nfunction App() {\n\n\n  const [joining, setJoining] = useState(false)\n  const [hosting, setHosting] = useState(false)\n  const [gameJoined, setGameJoined] = useState(false)\n\n  const [joinCode, setJoinCode] = useState(1234)\n  const [hostCode, setHostcode] = useState(Math.floor(1000 + Math.random() * 9000))\n\n  console.log(hostCode)\n  return (\n    <>\n      <div className=\"wapper\">\n        {!joining && !hosting && !gameJoined &&\n          <StartCard setHosting={setHosting} setJoining={setJoining} />\n        }\n        {joining && <JoinCard setHosting={setHosting} setJoinCode={setJoinCode} setJoining={setJoining} setGameJoined={setGameJoined} />}\n        {(hosting === true || gameJoined == true) && <LobbyCard hosting={hosting} setHosting={setHosting} setJoining={setJoining} hostCode={gameJoined ? joinCode : hostCode} setGameJoined={setGameJoined}/>}\n      </div>\n    </>\n\n  );\n\n\n}\nconst LobbyCard = (props) => {\n  const { joinCode, hosting, setGameJoined, setJoining, setHosting, hostCode } = props\n  const [state, setState] = useState([])\n  useEffect(() => {\n\n\n\n\n    firebase\n      .firestore()\n      .collection('rooms').doc(`${hostCode}`).set({ players: [{ name: \"host2\" }] }, { merge: true })\n\n    const unsubscribe = firebase\n      .firestore()\n      .collection('rooms')\n      .doc(`${hostCode}`)\n      .onSnapshot((snap) => {\n        if (snap.docs?.length) {\n\n          const temp = snap.docs.map(doc => ({\n            id: doc.id,\n            ...doc.data()\n          }))\n          setState(temp)\n        }\n      })\n    return () => unsubscribe()\n\n  }, [])\n  // useEffect(() => {\n\n  //   // .collection('rooms').add({ code: \"hej\", players: [{ name: \"host\" }] })\n  //   //   washingtonRef.update({\n  //   //     regions: firebase.firestore.FieldValue.arrayUnion(\"greater_virginia\")\n  //   // });\n\n\n  // }, [])\n\n  return (\n    <Card className=\"card-class\" style={{ padding: \"1rem\" }}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          Lobby {hostCode}\n        </Typography>\n        <ul>\n          {state.map(elem => <li>elem</li>)}\n        </ul>\n      </CardContent>\n      <CardActions >\n      </CardActions>\n\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n\n        <Button size=\"small\" color=\"primary\" onClick={() => {\n          setJoining(false)\n          setHosting(false)\n          setGameJoined(false)\n        }}>\n          Avbryt\n      </Button>\n        <Button size=\"small\" color=\"primary\" disabled={true}>\n          Starta Spel\n    </Button>\n      </CardActions>\n    </Card>\n  )\n}\nconst JoinCard = (props) => {\n  const { joinCode, setJoinCode, setJoining, setHosting, setGameJoined } = props\n\n\n  return (\n    <Card className=\"card-class\" style={{ padding: \"1rem\" }}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          Joinsa spel\n        </Typography>\n\n      </CardContent>\n      <CardActions >\n\n        <TextField value={joinCode} id=\"outlined-basic\" label=\"Anslutningskod\" variant=\"outlined\" onChange={(e) => setJoinCode(e.target.value)} />\n      </CardActions>\n\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <Button size=\"small\" color=\"primary\" onClick={() => {\n          setJoining(false)\n          setHosting(false)\n        }}>\n          Avbryt\n      </Button>\n        <Button size=\"small\" color=\"primary\" onClick={() =>  {\n        setJoining(false)\n          setHosting(false)\n          setGameJoined(true)}}>\n          Hitta lobby\n      </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nconst StartCard = (props) => {\n  return (\n    <Card className=\"card-class\">\n      <CardMedia\n        component=\"img\"\n        alt=\"Contemplative Reptile\"\n        height=\"140\"\n        image={temp}\n        title=\"tmep\"\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          Ritleken\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Lorem, ipsum dolor sit amet consectetur adipisicing elit. Saepe non rem inventore repellendus est exercitationem nihil earum consequatur libero corrupti?\n        </Typography>\n      </CardContent>\n\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <Button size=\"small\" color=\"primary\" onClick={() => {\n          props.setJoining(true)\n        }}>\n          Joina spel\n      </Button>\n        <Button size=\"small\" color=\"primary\" onClick={() =>\n          props.setHosting(true)\n        }>\n          Skapa rum\n      </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport 'fontsource-roboto';\n\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}