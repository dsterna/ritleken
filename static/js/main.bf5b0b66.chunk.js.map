{"version":3,"sources":["actions/index.js","config.js","assets/img/temp2.jpg","App.js","reducers/gameReducer.js","reducers/nameReducer.js","reducers/index.js","index.js"],"names":["isHost","bool","type","payload","changeGameCode","str","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Canvas","React","forwardRef","props","ref","ready","drawRound","useState","brushRadius","setBrushRadius","lazyRadius","setLazyRadius","opacity","setOpacity","color","setColor","index","setIndex","theme","createMuiTheme","palette","primary","main","secondary","ThemeProvider","CardActions","style","display","justifyContent","disabled","hideInterface","brushColor","CardContent","marginBottom","maxWidth","marginLeft","marginRight","padding","IconButton","onClick","current","undo","paddingTop","paddingBottom","Slider","width","value","onChange","event","newValue","aria-labelledby","min","max","step","newColor","replace","map","elem","Radio","checked","e","target","StartCard","name","useSelector","state","dispatch","useDispatch","Container","className","CardMedia","component","alt","height","image","temp2","title","Typography","gutterBottom","variant","to","Button","size","code","LobbyCard","game","gameCode","players","setPlayers","userName","customName","setCustomName","gameStarted","setGameStarted","history","useHistory","location","useLocation","playerObj","setPlayerObj","db","firestore","collection","doc","useEffect","set","update","push","unsubscribe","onSnapshot","snap","pathname","data","Object","keys","length","values","a","newName","fetchData","Card","TextField","id","label","len","playerObject","forEach","element","i","ary","reverse","ii","unshift","pop","order","round","rounds","setUpGameQueue","JoinCard","joinCode","setJoinCode","error","setError","onSubmit","preventDefault","get","then","exists","Snackbar","open","autoHideDuration","onClose","Alert","severity","WriteCard","nrOfPlayers","setNrOfPlayers","text","setText","setRound","nrOfReady","setNrOfReady","setReady","tempPlayers","tempRound","filter","handleDone","tempPlayer","p","textAlign","autoComplete","FormControlLabel","control","Checkbox","DrawCard","useRef","word","setWord","resetRound","setResetRound","setDrawRound","tempDrawRound","playerOfWord","clear","loadSaveData","getSaveData","DoneCard","currentName","setCurrentName","orders","setOrders","entries","key","val","indexOf","sort","b","marginTop","Tabs","indicatorColor","textColor","Tab","fontFamily","saveData","loadTimeOffset","touchAction","delete","App","exact","path","gameReducer","action","rand","Math","floor","random","nameReducer","newRand","allReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf5b0b66.chunk.js","sourcesContent":["export const increment = () => {\n    return {\n        type: 'INCREMENT'\n    }\n}\nexport const decrement = () => {\n    return {\n        type: 'DECREMENT'\n    }\n}\nexport const isHost = (bool) => {\n    return {\n        type: 'ISHOSTCHANGER',\n        payload: bool\n    }\n}\nexport const changeGameCode = (str) => {\n    return {\n        type: 'GAMECODECHANGER',\n        payload: str\n    }\n}\nexport const changeName = (str) => {\n    return {\n        type: 'NAMECHANGER',\n        payload: str\n    }\n}\nexport const changeCodeName = () => {\n    return {\n        type: 'NAMECODECHANGER'\n    }\n}\nexport const setNrOfPlayers = (int) => {\n    return {\n        type: 'SETNUMBEROFPLAYERS',\n        payload: int\n    }\n}","import 'firebase/firestore'\n\nimport firebase from 'firebase/app'\n\nlet firebaeConfig = {\n    apiKey: \"AIzaSyCam1vXotzoIfZT7DyTbF8XSnLe0he-Uto\",\n    authDomain: \"adealbreaker-c9190.firebaseapp.com\",\n    databaseURL: \"https://adealbreaker-c9190.firebaseio.com\",\n    projectId: \"adealbreaker-c9190\",\n    storageBucket: \"adealbreaker-c9190.appspot.com\",\n    messagingSenderId: \"621961109952\",\n    appId: \"1:621961109952:web:ae70fc224efd7b3cb8e825\"\n}\n\nfirebase.initializeApp(firebaeConfig)\nexport default firebase","export default __webpack_public_path__ + \"static/media/temp2.5070e5eb.jpg\";","import './App.scss'\n\nimport {\n  Link,\n  Route,\n  HashRouter as Router,\n  Switch,\n  useHistory,\n  useLocation,\n} from \"react-router-dom\";\nimport React, { useEffect, useRef, useState } from 'react'\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { changeCodeName, changeGameCode, changeName, isHost } from './actions'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Alert from '@material-ui/lab/Alert';\nimport Button from '@material-ui/core/Button';\nimport CanvasDraw from \"react-canvas-draw\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ColorLensOutlinedIcon from '@material-ui/icons/ColorLensOutlined';\nimport Container from '@material-ui/core/Container';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport HdrStrongOutlinedIcon from '@material-ui/icons/HdrStrongOutlined';\nimport IconButton from '@material-ui/core/IconButton';\nimport LineWeightOutlinedIcon from '@material-ui/icons/LineWeightOutlined';\nimport OpacityIcon from '@material-ui/icons/Opacity';\nimport Radio from '@material-ui/core/Radio';\nimport ReplayOutlined from '@material-ui/icons/ReplayOutlined';\nimport Slider from '@material-ui/core/Slider';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport firebase from './config'\nimport temp2 from './assets/img/temp2.jpg'\n\n/**\n * Todo:\n * \n * Refactor components to files and move styles to scss\n * Add fetched to localstorage in drawState to handle user refresh \n * test second game game code problem\n * style in Lobby card\n * Implement clock that can be turned off by Admin\n * \n * Show user names in Done cards for each drawing/word\n * \n */\n\nfunction App() {\n  return (\n    <div >\n      <Router>\n        <div className=\"wapper\">\n          <Switch>\n            <Route exact path=\"/lobby\">\n              <LobbyCard />\n            </Route>\n            <Route exact path=\"/join\">\n              <JoinCard />\n            </Route>\n            <Route exact path=\"/write\">\n              <WriteCard />\n            </Route>\n            <Route exact path=\"/draw\">\n              <DrawCard />\n            </Route>\n            <Route exact path=\"/done\">\n              <DoneCard />\n            </Route>\n            <Route path=\"/\">\n              <StartCard />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nconst Canvas = React.forwardRef((props, ref) => {\n  const { ready, drawRound } = props\n  const [brushRadius, setBrushRadius] = useState(6)\n  const [lazyRadius, setLazyRadius] = useState(0)\n  const [opacity, setOpacity] = useState(1)\n  const [color, setColor] = useState('rgba(38, 50, 56, 1)')\n  const [index, setIndex] = useState(3)\n\n  const handleRadiusChange = (event, newValue) => {\n    setBrushRadius(newValue);\n  };\n  const handleOpacityChange = (event, newValue) => {\n    const newColor = color.replace(/rgba?(\\(\\s*\\d+\\s*,\\s*\\d+\\s*,\\s*\\d+)(?:\\s*,.+?)?\\)/, `rgba$1,${newValue})`);\n    setColor(newColor)\n    setOpacity(newValue);\n  };\n  const handleLazyChange = (event, newValue) => {\n    setLazyRadius(newValue);\n  };\n  const handleColorChange = (event, newValue) => {\n    setColor(newValue);\n  };\n\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: color\n      },\n      secondary: {\n        main: '#9e9e9e',\n      },\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around', justifyContent: 'center' }}>\n        <CanvasDraw disabled={ready || !drawRound} ref={ref} hideInterface={ready || !drawRound} brushRadius={brushRadius} brushColor={color} lazyRadius={lazyRadius} />\n      </CardActions>\n\n      {(drawRound) && <CardContent style={{ marginBottom: 0, maxWidth: \"400px\", marginLeft: \"auto\", marginRight: \"auto\", padding: 0 }}>\n        <div style={{ display: \"flex\", justifyContent: 'space-around' }}>\n          <IconButton color=\"secondary\" onClick={() => ref.current.undo()}>\n            <ReplayOutlined />\n          </IconButton>\n          <IconButton color={(index === 0) ? 'primary' : \"secondary\"} onClick={() => setIndex(0)} >\n            <HdrStrongOutlinedIcon />\n          </IconButton>\n          <IconButton color={(index === 1) ? 'primary' : \"secondary\"} onClick={() => setIndex(1)} >\n            <LineWeightOutlinedIcon />\n          </IconButton>\n          <IconButton color={(index === 2) ? 'primary' : \"secondary\"} onClick={() => setIndex(2)}>\n            <OpacityIcon />\n          </IconButton>\n          <IconButton color={(index === 3) ? 'primary' : \"secondary\"} onClick={() => setIndex(3)}>\n            <ColorLensOutlinedIcon />\n          </IconButton>\n        </div>\n\n        <CardContent style={{ paddingTop: \"0px\", paddingBottom: \"0px\" }}>\n          {index === 0 &&\n            <Slider style={{ width: \"100%\" }} value={lazyRadius} onChange={handleLazyChange} aria-labelledby=\"continuous-slider\" min={.5} max={50} step={0.5} />\n          }\n          {index === 1 &&\n            <Slider style={{ width: \"100%\" }} value={brushRadius} onChange={handleRadiusChange} aria-labelledby=\"continuous-slider\" min={.5} max={25} step={0.5} />\n          }\n          {index === 2 &&\n            <Slider style={{ width: \"100%\" }} value={opacity} onChange={handleOpacityChange} aria-labelledby=\"continuous-slider\" min={0.1} max={1} step={0.1} />\n          }\n        </CardContent>\n\n        {index === 3 &&\n          <span style={{ padding: \"0\", display: \"flex\", justifyContent: 'space-around' }} >\n\n            {[\"244, 67, 54\", \"156, 39, 176\", \"33, 150, 243\", \"76, 175, 80\", \"255, 235, 59\", \"255, 152, 0\", \"158, 158, 158\", \"38, 50, 56\"].map((elem, index) =>\n              <Radio value={`rgba(${elem}, ${opacity})`}\n                key={index}\n                checked={color === `rgba(${elem}, ${opacity})`}\n                onChange={e => setColor(e.target.value)}\n                style={{ color: `rgba(${elem}, ${1})` }}\n              />)}\n          </span>\n        }\n      </CardContent>\n      }\n    </ThemeProvider >\n\n  )\n})\n\n\nconst StartCard = (props) => {\n  const name = useSelector(state => state.name)\n  const dispatch = useDispatch()\n\n  return (\n    <Container maxWidth=\"sm\" className=\"container\" >\n      <CardMedia\n        component=\"img\"\n        alt=\"Contemplative Reptile\"\n        height=\"300\"\n        image={temp2}\n        title=\"tmep\"\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          Ritleken\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Tänk viskleken fast med penna och papper (typ). En spelare startar ett rum och resterande spelare joinar mha koden. När spelet börjar ska alla skriva ett ord som nästkommande spelare ska rita. Spelaren efter kommer i sin tur endast se den ritade bilden och ska gissa vad bilden föreställer. Spelet är slut när samtliga spelare ritat/skrivit på alla ord. Målet med speler är att samma ord håller genom spelet.\n        </Typography>\n      </CardContent>\n\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <Link to=\"/join\"><Button size=\"small\" color=\"primary\" onClick={() => {\n          dispatch(isHost(false))\n        }}>Joina spel  </Button></Link>\n        <Link to=\"/lobby\"> <Button size=\"small\" color=\"primary\" onClick={() => {\n          dispatch(isHost(true))\n          dispatch(changeGameCode(name.code))\n        }\n        }>Skapa rum</Button></Link>\n      </CardActions>\n    </Container>\n  )\n}\n\nconst LobbyCard = (props) => {\n  const name = useSelector(state => state.name)\n  const isHost = useSelector(state => state.game.isHost)\n  const gameCode = useSelector(state => state.game.gameCode)\n  const [players, setPlayers] = useState([])\n  const [customName, setCustomName] = useState(name.userName)\n  const [gameStarted, setGameStarted] = useState(false)\n  const history = useHistory();\n  const dispatch = useDispatch()\n  const location = useLocation()\n  const [playerObj, setPlayerObj] = useState({})\n\n\n  const db = gameCode && firebase.firestore().collection('rooms').doc(`${gameCode}`)\n  useEffect(() => {\n\n    if (db) {\n      if (isHost) {\n        db.set({})\n      }\n      db.update({\n        [`players.${name.code}`]: { ...name, isHost: isHost },\n        gameStarted: false\n      })\n    }\n    else {\n      history.push('/')\n    }\n\n\n  }, [])\n\n\n  useEffect(() => {\n    if (db) {\n\n      const unsubscribe = firebase\n        .firestore()\n        .collection('rooms')\n        .doc(`${gameCode}`)\n        .onSnapshot((snap) => {\n          if (location.pathname === \"/lobby\") {\n            if (snap?.data()) {\n              if (Object.keys(snap.data()).length) {\n\n\n                setPlayers(Object.values(snap.data().players))\n                setPlayerObj(snap.data().players)\n                setGameStarted(snap.data().gameStarted)\n              }\n            }\n          }\n        })\n      return () => unsubscribe()\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let newName = customName !== \"\" ? customName : `player-${name.code}`\n      dispatch(changeName(newName))\n      try {\n        db.update({\n          [`players.${name.code}`]: { ...name, userName: newName, isHost: isHost },\n          gameStarted: false\n        })\n      } catch {\n      }\n    };\n    fetchData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [customName]);\n\n  const setUpGameQueue = () => {\n    let len = players.length - 1\n    let playerObject = playerObj\n    players.forEach((element, i) => {\n      let ary = [...players].reverse()\n      for (let ii = 0; ii < i + 1; ii++) {\n        ary.unshift(ary.pop());\n      }\n      playerObject[element.code].order = ary.map(elem => elem.code)\n      playerObject[element.code].ready = false\n\n    });\n    db.update({ round: 0, rounds: len + 1, players: playerObject })\n  }\n\n\n  useEffect(() => {\n    if (gameStarted) {\n      history.push(\"/write\")\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [gameStarted])\n\n  return (\n    <Card className=\"card-class\" style={{ padding: \"1rem\" }}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          Lobby {gameCode}\n        </Typography>\n        <ul>\n          {players.map((elem) => <li key={elem.code}>{elem.userName}</li>)}\n        </ul>\n      </CardContent>\n      <CardActions >\n      </CardActions>\n      <TextField value={customName} id=\"outlined-basic\" label=\"Namn\" variant=\"outlined\" onChange={(e) => {\n        setCustomName(e.target.value)\n      }} />\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <Link to=\"/\">   <Button size=\"small\" color=\"primary\" onClick={() => {\n        }}>Avbryt </Button></Link>\n        {isHost && <Button size=\"small\" color=\"primary\" onClick={() => {\n          setUpGameQueue()\n          db.update({ gameStarted: true })\n        }}> Starta  </Button>\n        }\n      </CardActions>\n    </Card>\n  )\n}\n\n\nconst JoinCard = (props) => {\n  const [joinCode, setJoinCode] = useState('')\n  const db = firebase.firestore().collection('rooms')\n  const dispatch = useDispatch()\n  const history = useHistory();\n  const [error, setError] = useState(false)\n  const joinGame = (params) => {\n    if (joinCode === \"\")\n      return\n\n    db.doc(joinCode).get().then(\n      doc => {\n        if (doc.exists) {\n          dispatch(changeGameCode(joinCode))\n          history.push(\"/lobby\")\n        }\n        else {\n          setError(true)\n        }\n      }\n    )\n  }\n\n  return (\n    <Card className=\"card-class\" style={{ padding: \"1rem\" }}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          Joina spel\n        </Typography>\n      </CardContent>\n      <form onSubmit={e => {\n        e.preventDefault();\n        joinGame()\n      }}>\n        <CardActions >\n          <TextField value={joinCode} id=\"outlined-basic\" label=\"Anslutningskod\" variant=\"outlined\" onChange={(e) => setJoinCode(e.target.value)} />\n        </CardActions>\n        <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n          <Link to=\"/\"><Button size=\"small\" color=\"primary\" onClick={() => {\n          }}>Avbryt </Button></Link>\n          <Button size=\"small\" color=\"primary\" type=\"submit\" >\n            Hitta spel </Button>\n          <Snackbar open={error} autoHideDuration={6000} onClose={() => { setError(false) }}>\n            <Alert severity=\"error\">Hittade ingets spel</Alert>\n          </Snackbar>\n        </CardActions>\n      </form>\n    </Card >\n  )\n}\n\n\nconst WriteCard = (props) => {\n  // skulle kunna sätta statet i local storage och ha som backup om man råkar uppdatera sidan\n  const name = useSelector(state => state.name.code)\n  // const nrOfPlayers = useSelector(state => state.game.nrOfPlayers)\n  const gameCode = useSelector(state => state.game.gameCode)\n\n  const db = gameCode && firebase.firestore().collection('rooms').doc(`${gameCode}`)\n  const [nrOfPlayers, setNrOfPlayers] = useState(99)\n  const [players, setPlayers] = useState([])\n  const [text, setText] = useState(\"\")\n  const [round, setRound] = useState(0)\n  const [nrOfReady, setNrOfReady] = useState(0)\n  const [ready, setReady] = useState(false)\n  const history = useHistory();\n  const location = useLocation()\n\n\n  useEffect(() => {\n\n    const unsubscribe = db.onSnapshot((snap) => {\n      if (location.pathname === \"/write\") {\n        if (snap.data()) {\n          const tempPlayers = snap.data().players\n          const tempRound = snap.data().round\n          setPlayers(tempPlayers)\n          setRound(tempRound)\n          setNrOfReady(Object.values(tempPlayers).filter(elem => elem.ready).length)\n          setNrOfPlayers(Object.values(tempPlayers).length)\n        }\n      }\n    })\n    return () => unsubscribe()\n  }, [])\n\n  const handleDone = (e) => {\n    e.preventDefault()\n    if (text === \"\") {\n      return\n    }\n    setReady(true)\n    const tempPlayer = players[name]\n    tempPlayer.ready = true\n    tempPlayer[round] = text\n    var p = \"players\";\n    var update = {};\n    update[p + '.' + name] = tempPlayer;\n    db.update(update)\n  }\n\n  useEffect(() => {\n    if (nrOfReady === nrOfPlayers) {\n      if (isHost) {\n        const tempPlayers = players\n        Object.keys(players).forEach((elem) => tempPlayers[elem].ready = false)\n        db.update({ round: round + 1, players: tempPlayers })\n      }\n      history.push(\"/draw\")\n    }\n  }, [nrOfReady])\n\n  return (\n    <Container maxWidth=\"sm\" className=\"container\" >\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h3\" style={{ marginBottom: 0, textAlign: \"center\" }}>\n          Skriv ditt ord:\n        </Typography>\n      </CardContent>\n      <CardActions style={{ display: \"flex\", justifyContent: 'center' }}>\n        <form onSubmit={(e) => handleDone(e)} autoComplete=\"off\"> <TextField disabled={ready} id=\"standard-basic\" label=\"\" value={text} onChange={(e) => { setText(e.target.value) }} /></form>\n        <br />\n      </CardActions>\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={ready}\n              onChange={(e) => handleDone(e)}\n              name=\"checkedB\"\n              color=\"primary\"\n              disabled={ready}\n            />\n          }\n          label={`Redo (${nrOfReady})`}\n        />\n      </CardActions>\n    </Container>\n  )\n}\n\nconst DrawCard = () => {\n  // skulle kunna sätta statet i local storage och ha som backup om man råkar uppdatera sidan\n  const name = useSelector(state => state.name.code)\n  const gameCode = useSelector(state => state.game.gameCode)\n  const ref = useRef(\"\")\n  const db = gameCode && firebase.firestore().collection('rooms').doc(`${gameCode}`)\n  const [players, setPlayers] = useState([])\n  const [word, setWord] = useState(\"\")\n  const [text, setText] = useState(\"\")\n  const [round, setRound] = useState(0)\n  const [nrOfReady, setNrOfReady] = useState(0)\n  const [nrOfPlayers, setNrOfPlayers] = useState(99)\n  const [ready, setReady] = useState(false)\n  const [resetRound, setResetRound] = useState(false)\n  const [drawRound, setDrawRound] = useState()\n  const history = useHistory();\n  const location = useLocation()\n\n  useEffect(() => {\n    if (resetRound === true) {\n      setReady(false)\n      setNrOfReady(0)\n      setText(\"\")\n\n\n    }\n    const unsubscribe = db.onSnapshot((snap) => {\n      if (location.pathname === \"/draw\") {\n        if (snap.data()) {\n          const tempPlayers = snap.data().players\n          const tempRound = snap.data().round\n          const tempNrOfPlayers = Object.values(tempPlayers).length\n          if (tempRound === tempNrOfPlayers) {\n            history.push('/done')\n          }\n          else {\n            setPlayers(tempPlayers)\n            setRound(tempRound)\n            const tempDrawRound = !!(round % 2 === 0)\n            setNrOfReady(Object.values(tempPlayers).filter(elem => elem.ready).length)\n            setNrOfPlayers(Object.values(tempPlayers).length)\n            const playerOfWord = tempPlayers[name].order[1]\n            setDrawRound(tempDrawRound)\n            setWord(tempPlayers[playerOfWord][tempRound - 1])\n          }\n        }\n      }\n    })\n    setResetRound(false)\n    return () => unsubscribe()\n  }, [resetRound])\n\n  useEffect(() => {\n    if (word) {\n      if (drawRound) {\n        ref.current.clear()\n      }\n      else {\n        const playerOfWord = players[name].order[1]\n        ref.current.loadSaveData(players[playerOfWord][round - 1], true)\n      }\n    }\n  }, [drawRound])\n\n  const handleDone = (e) => {\n    e.preventDefault()\n\n    if (text === \"\" && !drawRound) {\n      return\n    }\n    setReady(true)\n    const tempPlayer = players[name]\n    tempPlayer.ready = true\n    tempPlayer[round] = drawRound ? ref.current.getSaveData() : text\n    var p = \"players\";\n    var update = {};\n    update[p + '.' + name] = tempPlayer;\n    db.update(update)\n  }\n\n  useEffect(() => {\n    if (nrOfReady === nrOfPlayers) {\n      if (isHost) {\n        db.update({ round: round + 1 })\n        const tempPlayers = players\n        Object.keys(players).forEach((elem) => tempPlayers[elem].ready = false)\n        db.update({ round: round + 1, players: tempPlayers })\n      }\n      setResetRound(true)\n    }\n  }, [nrOfReady])\n  return (\n    <Container maxWidth=\"sm\" className=\"container\" >\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ textAlign: \"center\" }}>\n          {drawRound && `Rita ${word}`}\n        </Typography>\n      </CardContent>\n      <Canvas ready={ready} drawRound={drawRound} ref={ref} />\n      {!drawRound && <CardActions style={{ display: \"flex\", justifyContent: 'center' }}>\n        <form onSubmit={(e) => handleDone(e)} autoComplete=\"off\"> <TextField disabled={ready} id=\"standard-basic\" label=\"\" value={text} onChange={(e) => { setText(e.target.value) }} /></form>\n      </CardActions>\n      }\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={ready}\n              onClick={(e) => handleDone(e)}\n              name=\"checkedB\"\n              color=\"primary\"\n              disabled={ready}\n            />\n          }\n          label={`Redo (${nrOfReady})`}\n        />\n      </CardActions>\n    </Container>\n  )\n}\n\nconst DoneCard = (props) => {\n  // const gameCode = 8475\n  // const name = 8475\n  const gameCode = useSelector(state => state.game.gameCode)\n  const name = useSelector(state => state.name.code)\n\n  const [currentName, setCurrentName] = useState(name)\n  const db = firebase.firestore().collection('rooms').doc(`${gameCode}`)\n  const [players, setPlayers] = useState()\n  const [orders, setOrders] = useState()\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const ref = useRef()\n  useEffect(() => {\n    if (!db) {\n      history.push('/')\n    }\n    db.get().then(\n      doc => {\n        if (doc.exists) {\n          setPlayers(doc.data().players);\n        }\n      }\n    )\n  }, [])\n\n  useEffect(() => {\n    if (players) {\n      const tempPlayers = players\n      const ary = Object.entries(tempPlayers).map(([key, val]) => { return { key: key, val: val.order.indexOf(currentName) } }).sort((a, b) => a.val > b.val ? 1 : ((b.val > a.val) ? -1 : 0))\n      setOrders(ary)\n    }\n  }, [players, currentName])\n\n  const handleChange = (e, newValue) => {\n    setCurrentName(newValue)\n  }\n\n  return (\n    <Container maxWidth=\"sm\" className=\"container\" style={{ marginTop: \"3rem\", marginBottom: \"3rem\", }}>\n      <CardContent>\n        {players && <div style={{ display: \"flex\", justifyContent: 'center' }} >\n          <Tabs\n            onChange={handleChange}\n            value={currentName}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"scrollable\"\n          >\n            {Object.keys(players).map((elem, index) => <Tab key={index} label={players[elem].userName} value={players[elem].code} />)}\n          </Tabs>\n        </div>}\n      </CardContent>\n      {\n        orders && orders.map((elem, index) =>\n          <div key={index}>{index % 2 === 0\n            ?\n            // change to typography\n            <h2 style={{ textAlign: \"center\", fontFamily: 'Roboto' }}>{players[elem.key][index]}</h2>\n            :\n            <div style={{ display: \"flex\", justifyContent: 'center' }}>\n              <CanvasDraw disabled={true} ref={ref} saveData={players[elem.key][index]} loadTimeOffset={0.4} hideInterface={true} style={{ touchAction: \"pan-y\" }} />\n            </div>}\n          </div>)\n      }\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <Link to=\"/\"> <Button size=\"small\" color=\"primary\" onClick={() => {\n          if (db) {\n            db.delete();\n            dispatch(changeCodeName())\n          }\n        }\n        }>Tillbaka</Button></Link>\n      </CardActions>\n    </Container >\n  )\n}\n\n\nexport default App;","const gameReducer = (state = { gameCode: '', isHost: true, nrOfPlayers: 2 }, action) => {\n\n    switch (action.type) {\n        case 'GAMECODECHANGER':\n            return { ...state, gameCode: action.payload }\n        case 'ISHOSTCHANGER':\n            return { ...state, isHost: action.payload }\n        case 'SETNUMBEROFPLAYERS':\n            return { ...state, nrOfPlayers: action.payload }\n        default:\n            return state\n    }\n}\n\nexport default gameReducer","\nconst rand = Math.floor(1000 + Math.random() * 9000)\nconst nameReducer = (state = { code: rand, userName: `spelare-${rand}` }, action) => {\n    switch (action.type) {\n        case 'NAMECHANGER':\n            return { ...state, userName: action.payload }\n        case 'NAMECODECHANGER':\n            let newRand = Math.floor(1000 + Math.random() * 9000)\n            return { ...state, code: newRand }\n        default:\n            return state\n    }\n}\n\nexport default nameReducer","import { combineReducers } from 'redux'\nimport gameReducer from './gameReducer'\nimport nameReducer from './nameReducer'\n\nexport const allReducers = combineReducers({ name: nameReducer , game: gameReducer})","import './index.css';\nimport '@fontsource/roboto';\n\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { allReducers } from './reducers'\nimport { createStore } from 'redux'\n\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}