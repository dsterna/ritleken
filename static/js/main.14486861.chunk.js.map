{"version":3,"sources":["config.js","assets/img/temp.jpg","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","LobbyCard","props","state","useEffect","unsubscribe","firestore","collection","add","code","players","name","Card","className","style","padding","CardContent","Typography","variant","component","map","elem","CardActions","display","justifyContent","Button","size","color","onClick","setJoining","setHosting","disabled","JoinCard","TextField","id","label","StartCard","CardMedia","alt","height","image","temp","title","gutterBottom","App","useState","setState","checked","joining","hosting","onSnapshot","snap","docs","doc","data","Slide","direction","in","mountOnEnter","unmountOnExit","Paper","elevation","points","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14486861.chunk.js","sourcesContent":["import 'firebase/firestore'\n\nimport firebase from 'firebase/app'\n\nlet firebaeConfig = {\n    apiKey: \"AIzaSyCam1vXotzoIfZT7DyTbF8XSnLe0he-Uto\",\n    authDomain: \"adealbreaker-c9190.firebaseapp.com\",\n    databaseURL: \"https://adealbreaker-c9190.firebaseio.com\",\n    projectId: \"adealbreaker-c9190\",\n    storageBucket: \"adealbreaker-c9190.appspot.com\",\n    messagingSenderId: \"621961109952\",\n    appId: \"1:621961109952:web:ae70fc224efd7b3cb8e825\"\n}\n\nfirebase.initializeApp(firebaeConfig)\nexport default firebase","export default __webpack_public_path__ + \"static/media/temp.1f0dee70.jpg\";","import './App.scss'\n\nimport React, { useEffect, useState } from 'react'\n\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport DialpadIcon from '@material-ui/icons/Dialpad';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport Paper from \"@material-ui/core/Paper\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Switch from \"@material-ui/core/Switch\";\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport firebase from './config'\nimport temp from './assets/img/temp.jpg'\n\n// After\nfunction App() {\n  const [state, setState] = useState([])\n  const [checked, setChecked] = useState(false);\n  const [joining, setJoining] = useState(false)\n  const [hosting, setHosting] = useState(false)\n\n  const handleChange = () => {\n    setChecked((prev) => !prev);\n  };\n  useEffect(() => {\n    const unsubscribe = firebase\n      .firestore()\n      .collection('rooms')\n      .onSnapshot((snap) => {\n        const temp = snap.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }))\n        setState(temp)\n      })\n    return () => unsubscribe()\n  }, [])\n\n  return (\n    <>\n      <Slide direction=\"up\" in={checked} mountOnEnter unmountOnExit>\n        <Paper elevation={4} >\n          <svg >\n            <polygon points=\"0,100 50,00, 100,100\" />\n          </svg>\n        </Paper>\n      </Slide>\n      <div className=\"wapper\">\n        {!joining && !hosting &&\n          <StartCard setHosting={setHosting} setJoining={setJoining} />\n        }\n        {joining && <JoinCard setHosting={setHosting} setJoining={setJoining} />}\n        {hosting && <LobbyCard setHosting={setHosting} setJoining={setJoining} state={state} />}\n      </div>\n    </>\n\n  );\n\n\n}\nconst LobbyCard = (props) => {\nconst {state} = props\n  useEffect(() => {\n    const unsubscribe = firebase\n      .firestore()\n      .collection('rooms').add({ code: \"hej\", players: [{ name: \"host\" }] })\n    return () =>\n      unsubscribe()\n\n  }, [])\n\n  return (\n    <Card className=\"card-class\" style={{ padding: \"1rem\" }}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          Lobby 12345\n      </Typography>\n        <ul>\n          {state.map(elem => <li>elem</li>)}\n        </ul>\n      </CardContent>\n      <CardActions >\n      </CardActions>\n\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n\n        <Button size=\"small\" color=\"primary\" onClick={() => {\n          props.setJoining(false)\n          props.setHosting(false)\n        }}>\n          Avbryt\n      </Button>\n        <Button size=\"small\" color=\"primary\" disabled={true}>\n          Starta Spel\n    </Button>\n      </CardActions>\n    </Card>\n  )\n}\nconst JoinCard = (props) => {\n  return (\n    <Card className=\"card-class\" style={{ padding: \"1rem\" }}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          Kod:\n        </Typography>\n\n      </CardContent>\n      <CardActions >\n\n        <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" />\n      </CardActions>\n\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <Button size=\"small\" color=\"primary\" onClick={() => {\n          props.setJoining(false)\n          props.setHosting(false)\n        }}>\n          Avbryt\n      </Button>\n        <Button size=\"small\" color=\"primary\">\n          Hitta lobby\n      </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nconst StartCard = (props) => {\n  return (\n    <Card className=\"card-class\">\n      <CardMedia\n        component=\"img\"\n        alt=\"Contemplative Reptile\"\n        height=\"140\"\n        image={temp}\n        title=\"tmep\"\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          Ritleken\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Lorem, ipsum dolor sit amet consectetur adipisicing elit. Saepe non rem inventore repellendus est exercitationem nihil earum consequatur libero corrupti?\n        </Typography>\n      </CardContent>\n\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <Button size=\"small\" color=\"primary\" onClick={() => {\n          props.setJoining(true)\n        }}>\n          Joina spel\n      </Button>\n        <Button size=\"small\" color=\"primary\" onClick={() =>\n          props.setHosting(true)\n        }>\n          Skapa rum\n      </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport 'fontsource-roboto';\n\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}