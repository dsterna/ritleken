{"version":3,"sources":["actions/index.js","config.js","assets/img/temp.jpg","App.js","reducers/gameReducer.js","reducers/nameReducer.js","reducers/index.js","index.js"],"names":["isHost","bool","type","payload","changeGameCode","str","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","StartCard","props","name","useSelector","state","dispatch","useDispatch","Container","maxWidth","className","CardMedia","component","alt","height","image","temp","title","CardContent","Typography","gutterBottom","variant","color","CardActions","style","display","justifyContent","to","Button","size","onClick","code","LobbyCard","game","gameCode","useState","players","setPlayers","userName","customName","setCustomName","gameStarted","setGameStarted","history","useHistory","location","useLocation","playerObj","setPlayerObj","db","firestore","collection","doc","useEffect","set","update","unsubscribe","onSnapshot","snap","pathname","data","Object","keys","length","values","a","newName","fetchData","push","Card","padding","map","elem","TextField","value","id","label","onChange","e","target","len","playerObject","forEach","element","i","ary","reverse","ii","unshift","pop","order","ready","round","rounds","setUpGameQueue","JoinCard","joinCode","setJoinCode","error","setError","onSubmit","preventDefault","get","then","exists","Snackbar","open","autoHideDuration","onClose","Alert","severity","WriteCard","nrOfPlayers","setNrOfPlayers","text","setText","setRound","nrOfReady","setNrOfReady","setReady","tempPlayers","tempRound","filter","handleDone","tempPlayer","p","marginBottom","textAlign","autoComplete","disabled","FormControlLabel","control","Checkbox","checked","DrawCard","ref","useRef","word","setWord","resetRound","setResetRound","drawRound","setDrawRound","tempDrawRound","playerOfWord","current","clear","loadSaveData","getSaveData","DoneCard","currentName","setCurrentName","orders","setOrders","entries","key","val","indexOf","sort","b","marginTop","Tabs","newValue","indicatorColor","textColor","centered","Tab","fontFamily","index","saveData","hideInterface","delete","App","exact","path","gameReducer","action","rand","Math","floor","random","nameReducer","newRand","allReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f05f1dd.chunk.js","sourcesContent":["export const increment = () => {\n    return {\n        type: 'INCREMENT'\n    }\n}\nexport const decrement = () => {\n    return {\n        type: 'DECREMENT'\n    }\n}\nexport const isHost = (bool) => {\n    return {\n        type: 'ISHOSTCHANGER',\n        payload: bool\n    }\n}\nexport const changeGameCode = (str) => {\n    return {\n        type: 'GAMECODECHANGER',\n        payload: str\n    }\n}\nexport const changeName = (str) => {\n    return {\n        type: 'NAMECHANGER',\n        payload: str\n    }\n}\nexport const changeCodeName = () => {\n    return {\n        type: 'NAMECODECHANGER'\n    }\n}\nexport const setNrOfPlayers = (int) => {\n    return {\n        type: 'SETNUMBEROFPLAYERS',\n        payload: int\n    }\n}","import 'firebase/firestore'\n\nimport firebase from 'firebase/app'\n\nlet firebaeConfig = {\n    apiKey: \"AIzaSyCam1vXotzoIfZT7DyTbF8XSnLe0he-Uto\",\n    authDomain: \"adealbreaker-c9190.firebaseapp.com\",\n    databaseURL: \"https://adealbreaker-c9190.firebaseio.com\",\n    projectId: \"adealbreaker-c9190\",\n    storageBucket: \"adealbreaker-c9190.appspot.com\",\n    messagingSenderId: \"621961109952\",\n    appId: \"1:621961109952:web:ae70fc224efd7b3cb8e825\"\n}\n\nfirebase.initializeApp(firebaeConfig)\nexport default firebase","export default __webpack_public_path__ + \"static/media/temp.1f0dee70.jpg\";","import './App.scss'\n\nimport {\n  Link,\n  Route,\n  HashRouter as Router,\n  Switch,\n  useHistory,\n  useLocation,\n} from \"react-router-dom\";\nimport React, { useEffect, useRef, useState } from 'react'\nimport { changeCodeName, changeGameCode, changeName, isHost } from './actions'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Alert from '@material-ui/lab/Alert';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CanvasDraw from \"react-canvas-draw\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Container from '@material-ui/core/Container';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n// import { RouterRounded } from '@material-ui/icons';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport TextField from '@material-ui/core/TextField';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport Typography from '@material-ui/core/Typography';\nimport firebase from './config'\nimport temp from './assets/img/temp.jpg'\n\nfunction App() {\n  return (\n    <div >\n      <Router>\n        <div className=\"wapper\">\n          <Switch>\n            <Route exact path=\"/lobby\">\n              <LobbyCard />\n            </Route>\n            <Route exact path=\"/join\">\n              <JoinCard />\n            </Route>\n            <Route exact path=\"/write\">\n              <WriteCard />\n            </Route>\n            <Route exact path=\"/draw\">\n              <DrawCard />\n            </Route>\n            <Route exact path=\"/done\">\n              <DoneCard />\n            </Route>\n            <Route path=\"/\">\n              <StartCard />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n\n\n}\n\n\nconst StartCard = (props) => {\n  const name = useSelector(state => state.name)\n  const dispatch = useDispatch()\n\n  return (\n    <Container maxWidth=\"sm\" className=\"container\" >\n      <CardMedia\n        component=\"img\"\n        alt=\"Contemplative Reptile\"\n        height=\"140\"\n        image={temp}\n        title=\"tmep\"\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          Ritleken\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Lorem, ipsum dolor sit amet consectetur adipisicing elit. Saepe non rem inventore repellendus est exercitationem nihil earum consequatur libero corrupti?\n        </Typography>\n      </CardContent>\n\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n\n        <Link to=\"/join\"><Button size=\"small\" color=\"primary\" onClick={() => {\n          dispatch(isHost(false))\n\n        }}>Joina spel  </Button></Link>\n        <Link to=\"/lobby\"> <Button size=\"small\" color=\"primary\" onClick={() => {\n          dispatch(isHost(true))\n          dispatch(changeGameCode(name.code))\n        }\n        }>Skapa rum</Button></Link>\n\n      </CardActions>\n    </Container>\n  )\n}\n\nconst LobbyCard = (props) => {\n  const name = useSelector(state => state.name)\n  const isHost = useSelector(state => state.game.isHost)\n  const gameCode = useSelector(state => state.game.gameCode)\n  const [players, setPlayers] = useState([])\n  const [customName, setCustomName] = useState(name.userName)\n  const [gameStarted, setGameStarted] = useState(false)\n  const history = useHistory();\n  const dispatch = useDispatch()\n  const location = useLocation()\n  const [playerObj, setPlayerObj] = useState({})\n\n\n  const db = gameCode && firebase.firestore().collection('rooms').doc(`${gameCode}`)\n\n\n  useEffect(() => {\n    if (isHost) {\n      db.set({})\n    }\n    db.update({\n      [`players.${name.code}`]: { ...name, isHost: isHost },\n      gameStarted: false\n    })\n  }, [])\n\n\n  useEffect(() => {\n    const unsubscribe = firebase\n      .firestore()\n      .collection('rooms')\n      .doc(`${gameCode}`)\n      .onSnapshot((snap) => {\n        if (location.pathname === \"/lobby\") {\n          if (snap?.data()) {\n            if (Object.keys(snap.data()).length) {\n\n\n              setPlayers(Object.values(snap.data().players))\n              setPlayerObj(snap.data().players)\n              setGameStarted(snap.data().gameStarted)\n            }\n          }\n        }\n      })\n    return () => unsubscribe()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let newName = customName !== \"\" ? customName : `player-${name.code}`\n      dispatch(changeName(newName))\n      try {\n        db.update({\n          [`players.${name.code}`]: { ...name, userName: newName, isHost: isHost },\n          gameStarted: false\n        })\n      } catch {\n      }\n    };\n    fetchData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [customName]);\n\n  const setUpGameQueue = () => {\n    let len = players.length - 1\n    let playerObject = playerObj\n    players.forEach((element, i) => {\n      let ary = [...players].reverse()\n      for (let ii = 0; ii < i + 1; ii++) {\n        ary.unshift(ary.pop());\n      }\n      playerObject[element.code].order = ary.map(elem => elem.code)\n      playerObject[element.code].ready = false\n\n    });\n    db.update({ round: 0, rounds: len + 1, players: playerObject })\n  }\n\n\n  useEffect(() => {\n    if (gameStarted) {\n      history.push(\"/write\")\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [gameStarted])\n\n  return (\n    <Card className=\"card-class\" style={{ padding: \"1rem\" }}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          Lobby {gameCode}\n        </Typography>\n        <h3>{!gameStarted ? \"Väntar\" : \"Startad\"}</h3>\n        <ul>\n          {players.map((elem) => <li key={elem.code}>{elem.userName}</li>)}\n        </ul>\n      </CardContent>\n      <CardActions >\n      </CardActions>\n\n      <TextField value={customName} id=\"outlined-basic\" label=\"Namn\" variant=\"outlined\" onChange={(e) => {\n        setCustomName(e.target.value)\n      }} />\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <Link to=\"/\">   <Button size=\"small\" color=\"primary\" onClick={() => {\n        }}>Avbryt </Button></Link>\n        {isHost && <Button size=\"small\" color=\"primary\" onClick={() => {\n          setUpGameQueue()\n          db.update({ gameStarted: true })\n        }}> Starta  </Button>\n        }\n      </CardActions>\n    </Card>\n  )\n}\n\n\nconst JoinCard = (props) => {\n  const [joinCode, setJoinCode] = useState('')\n  const db = firebase.firestore().collection('rooms')\n  const dispatch = useDispatch()\n  const history = useHistory();\n  const [error, setError] = useState(false)\n  const joinGame = (params) => {\n    if (joinCode === \"\")\n      return\n\n    db.doc(joinCode).get().then(\n      doc => {\n        if (doc.exists) {\n          dispatch(changeGameCode(joinCode))\n          history.push(\"/lobby\")\n        }\n        else {\n          setError(true)\n        }\n      }\n    )\n  }\n\n  return (\n    <Card className=\"card-class\" style={{ padding: \"1rem\" }}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          Joina spel\n        </Typography>\n      </CardContent>\n      <form onSubmit={e => {\n        e.preventDefault();\n        joinGame()\n      }}>\n        <CardActions >\n          <TextField value={joinCode} id=\"outlined-basic\" label=\"Anslutningskod\" variant=\"outlined\" onChange={(e) => setJoinCode(e.target.value)} />\n        </CardActions>\n        <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n          <Link to=\"/\"><Button size=\"small\" color=\"primary\" onClick={() => {\n          }}>Avbryt </Button></Link>\n          <Button size=\"small\" color=\"primary\" type=\"submit\" >\n            Hitta spel </Button>\n          <Snackbar open={error} autoHideDuration={6000} onClose={() => { setError(false) }}>\n            <Alert severity=\"error\">Hittade ingets spel</Alert>\n          </Snackbar>\n        </CardActions>\n      </form>\n    </Card >\n  )\n}\n\n\nconst WriteCard = (props) => {\n  // skulle kunna sätta statet i local storage och ha som backup om man råkar uppdatera sidan\n  const name = useSelector(state => state.name.code)\n  // const nrOfPlayers = useSelector(state => state.game.nrOfPlayers)\n  const gameCode = useSelector(state => state.game.gameCode)\n\n  const db = gameCode && firebase.firestore().collection('rooms').doc(`${gameCode}`)\n  const [nrOfPlayers, setNrOfPlayers] = useState(99)\n  const [players, setPlayers] = useState([])\n  const [text, setText] = useState(\"\")\n  const [round, setRound] = useState(0)\n  const [nrOfReady, setNrOfReady] = useState(0)\n  const [ready, setReady] = useState(false)\n  const history = useHistory();\n  const location = useLocation()\n\n\n  useEffect(() => {\n\n    const unsubscribe = db.onSnapshot((snap) => {\n      if (location.pathname === \"/write\") {\n        if (snap.data()) {\n          const tempPlayers = snap.data().players\n          const tempRound = snap.data().round\n          setPlayers(tempPlayers)\n          setRound(tempRound)\n          setNrOfReady(Object.values(tempPlayers).filter(elem => elem.ready).length)\n          setNrOfPlayers(Object.values(tempPlayers).length)\n        }\n      }\n    })\n    return () => unsubscribe()\n  }, [])\n\n  const handleDone = (e) => {\n    e.preventDefault()\n    if (text === \"\") {\n      return\n    }\n    setReady(true)\n    const tempPlayer = players[name]\n    tempPlayer.ready = true\n    tempPlayer[round] = text\n    var p = \"players\";\n    var update = {};\n    update[p + '.' + name] = tempPlayer;\n    db.update(update)\n  }\n\n  useEffect(() => {\n    if (nrOfReady === nrOfPlayers) {\n      if (isHost) {\n        const tempPlayers = players\n        Object.keys(players).forEach((elem) => tempPlayers[elem].ready = false)\n        db.update({ round: round + 1, players: tempPlayers })\n      }\n      history.push(\"/draw\")\n    }\n  }, [nrOfReady])\n\n  return (\n    <Container maxWidth=\"sm\" className=\"container\" >\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h3\" style={{ marginBottom: 0, textAlign: \"center\" }}>\n          Skriv ditt ord:\n        </Typography>\n      </CardContent>\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around', justifyContent: 'center' }}>\n        <form onSubmit={(e) => handleDone(e)} autoComplete=\"off\"> <TextField disabled={ready} id=\"standard-basic\" label=\"\" value={text} onChange={(e) => { setText(e.target.value) }} /></form>\n        <br />\n      </CardActions>\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={ready}\n              onChange={(e) => handleDone(e)}\n              name=\"checkedB\"\n              color=\"primary\"\n              disabled={ready}\n            />\n          }\n          label={`Redo (${nrOfReady})`}\n        />\n      </CardActions>\n    </Container>\n  )\n}\n\nconst DrawCard = () => {\n  // skulle kunna sätta statet i local storage och ha som backup om man råkar uppdatera sidan\n  const name = useSelector(state => state.name.code)\n  const gameCode = useSelector(state => state.game.gameCode)\n  const ref = useRef(\"\")\n  const db = gameCode && firebase.firestore().collection('rooms').doc(`${gameCode}`)\n  const [players, setPlayers] = useState([])\n  const [word, setWord] = useState(\"\")\n  const [text, setText] = useState(\"\")\n  const [round, setRound] = useState(0)\n  const [nrOfReady, setNrOfReady] = useState(0)\n  const [nrOfPlayers, setNrOfPlayers] = useState(99)\n  const [ready, setReady] = useState(false)\n  const [resetRound, setResetRound] = useState(false)\n  const [drawRound, setDrawRound] = useState()\n  const history = useHistory();\n  const location = useLocation()\n\n  useEffect(() => {\n    if (resetRound === true) {\n      setReady(false)\n      setNrOfReady(0)\n      setText(\"\")\n\n\n    }\n    const unsubscribe = db.onSnapshot((snap) => {\n      if (location.pathname === \"/draw\") {\n        if (snap.data()) {\n          const tempPlayers = snap.data().players\n          const tempRound = snap.data().round\n          const tempNrOfPlayers = Object.values(tempPlayers).length\n          if (tempRound === tempNrOfPlayers) {\n            history.push('/done')\n          }\n          else {\n            setPlayers(tempPlayers)\n            setRound(tempRound)\n            const tempDrawRound = !!(round % 2 === 0)\n            setNrOfReady(Object.values(tempPlayers).filter(elem => elem.ready).length)\n            setNrOfPlayers(Object.values(tempPlayers).length)\n            const playerOfWord = tempPlayers[name].order[1]\n            setDrawRound(tempDrawRound)\n            setWord(tempPlayers[playerOfWord][tempRound - 1])\n          }\n        }\n      }\n    })\n    setResetRound(false)\n    return () => unsubscribe()\n  }, [resetRound])\n\n  useEffect(() => {\n    if (word) {\n      if (drawRound) {\n        ref.current.clear()\n      }\n      else {\n        const playerOfWord = players[name].order[1]\n        ref.current.loadSaveData(players[playerOfWord][round - 1], true)\n      }\n    }\n  }, [drawRound])\n\n  const handleDone = (e) => {\n    e.preventDefault()\n\n    if (text === \"\" && !drawRound) {\n      return\n    }\n    setReady(true)\n    const tempPlayer = players[name]\n    tempPlayer.ready = true\n    tempPlayer[round] = drawRound ? ref.current.getSaveData() : text\n    var p = \"players\";\n    var update = {};\n    update[p + '.' + name] = tempPlayer;\n    db.update(update)\n  }\n\n  useEffect(() => {\n    if (nrOfReady === nrOfPlayers) {\n      if (isHost) {\n        db.update({ round: round + 1 })\n        const tempPlayers = players\n        Object.keys(players).forEach((elem) => tempPlayers[elem].ready = false)\n        db.update({ round: round + 1, players: tempPlayers })\n      }\n      setResetRound(true)\n    }\n  }, [nrOfReady])\n  return (\n    <Container maxWidth=\"sm\" className=\"container\" >\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{ textAlign: \"center\" }}>\n          {drawRound && `Rita ${word}`}\n        </Typography>\n\n      </CardContent>\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around', justifyContent: 'center' }}>\n        <CanvasDraw disabled={ready || !drawRound} ref={ref} />\n      </CardActions>\n      {!drawRound && <CardActions style={{ display: \"flex\", justifyContent: 'space-around', justifyContent: 'center' }}>\n        <form onSubmit={(e) => handleDone(e)} autoComplete=\"off\"> <TextField disabled={ready} id=\"standard-basic\" label=\"\" value={text} onChange={(e) => { setText(e.target.value) }} /></form>\n      </CardActions>\n      }\n      <br></br>\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={ready}\n              onClick={(e) => handleDone(e)}\n              name=\"checkedB\"\n              color=\"primary\"\n              disabled={ready}\n            />\n          }\n          label={`Redo (${nrOfReady})`}\n        />\n      </CardActions>\n    </Container>\n  )\n}\n\nconst DoneCard = (props) => {\n  const gameCode = 3451\n  const name = 3451\n  // const gameCode = useSelector(state => state.game.gameCode)\n  // const name = useSelector(state => state.name.code)\n\n  const [currentName, setCurrentName] = useState(name)\n  const db = firebase.firestore().collection('rooms').doc(`${gameCode}`)\n  const [players, setPlayers] = useState()\n  const [orders, setOrders] = useState()\n  const dispatch = useDispatch()\n  const history = useHistory()\n  useEffect(() => {\n    if (!db) {\n      history.push('/')\n    }\n    db.get().then(\n      doc => {\n        if (doc.exists) {\n          setPlayers(doc.data().players);\n        }\n      }\n    )\n  }, [])\n\n  useEffect(() => {\n    if (players) {\n      const tempPlayers = players\n      const ary = Object.entries(tempPlayers).map(([key, val]) => { return { key: key, val: val.order.indexOf(currentName) } }).sort((a, b) => a.val > b.val ? 1 : ((b.val > a.val) ? -1 : 0))\n      setOrders(ary)\n    }\n  }, [players, currentName])\n\n  const handleChange = (e, newValue) => {\n    setCurrentName(newValue)\n  }\n\n  return (\n    <Container maxWidth=\"sm\" className=\"container\" style={{ marginTop: \"3rem\", marginBottom: \"3rem\", }}>\n      <CardContent>\n        <div>\n          <Tabs\n            onChange={handleChange}\n            value={currentName}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            {Object.keys(players).map(elem => <Tab label={players[elem].userName} value={players[elem].code} />)}\n\n\n          </Tabs>\n          {players && <h2 style={{ textAlign: 'center', fontFamily: 'Roboto' }}>{players[currentName].code}</h2>}\n        </div>\n      </CardContent>\n      {orders && orders.map((elem, index) =>\n        <div>{index % 2 === 0\n          ?\n          <h2 style={{ textAlign: \"center\", fontFamily: 'Roboto' }}>{players[elem.key][index]}</h2>\n          :\n          <div style={{ display: \"flex\", justifyContent: 'space-around', justifyContent: 'center' }}>\n            <CanvasDraw disabled={true} saveData={players[elem.key][index]} hideInterface={true} />\n\n          </div>}\n        </div>)\n      }\n      <CardActions style={{ display: \"flex\", justifyContent: 'space-around' }}>\n        <Link to=\"/\"> <Button size=\"small\" color=\"primary\" onClick={() => {\n          if (db) {\n            db.delete();\n            dispatch(changeCodeName())\n          }\n        }\n        }>Tillbaka</Button></Link>\n      </CardActions>\n    </Container >\n  )\n}\n\n\nexport default App;","const gameReducer = (state = { gameCode: '', isHost: true, nrOfPlayers: 2 }, action) => {\n\n    switch (action.type) {\n        case 'GAMECODECHANGER':\n            return { ...state, gameCode: action.payload }\n        case 'ISHOSTCHANGER':\n            return { ...state, isHost: action.payload }\n        case 'SETNUMBEROFPLAYERS':\n            return { ...state, nrOfPlayers: action.payload }\n        default:\n            return state\n    }\n}\n\nexport default gameReducer","\nconst rand = Math.floor(1000 + Math.random() * 9000)\nconst nameReducer = (state = { code: rand, userName: `spelare-${rand}` }, action) => {\n    switch (action.type) {\n        case 'NAMECHANGER':\n            return { ...state, userName: action.payload }\n        case 'NAMECODECHANGER':\n            let newRand = Math.floor(1000 + Math.random() * 9000)\n            return { ...state, code: newRand }\n        default:\n            return state\n    }\n}\n\nexport default nameReducer","import { combineReducers } from 'redux'\nimport gameReducer from './gameReducer'\nimport nameReducer from './nameReducer'\n\nexport const allReducers = combineReducers({ name: nameReducer , game: gameReducer})","import './index.css';\nimport '@fontsource/roboto';\n\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { allReducers } from './reducers'\nimport { createStore } from 'redux'\n\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}